"""
Bot Author: tester

test
testing
"""

import discord
from discord.ext import commands, tasks
from dotenv import load_dotenv
import os
from cogs import helloWorld
import json

class Bot(commands.Bot):
    def __init__(self):
        with open('botbox.conf') as f:
            config = json.load(f)

        self.name =  config['bot']['name']
        intents = discord.Intents.all()
        intents.message_content = True
        super().__init__(command_prefix = config['bot']['command_prefix'], intents=intents, help_command = None)
        self.synced = False

    async def syncing(self):
        if not self.synced:
            await self.tree.sync()
            self.synced = True
        print(f"Synced slash commands for {self.user}")

    async def on_command_error(self, ctx, error):
        await ctx.reply(error, ephemeral = True)

load_dotenv()
bot = Bot()
TOKEN = str(os.getenv('DISCORD_TOKEN'))
GUILD = os.getenv('DISCORD_GUILD')

@bot.event
async def on_ready():
    print(f"{bot.name} is starting up...")
    print(f'{bot.user} has connected to Discord!')
    print(f'Connected to guild: {GUILD}')

    with open('botbox.conf', 'r') as f:
        config = json.load(f)

    for cog_config in config['cogs']:
        cog_file = cog_config['file']
        
        try:
            await bot.load_extension(f'cogs.{cog_file}')
        except Exception as e:
            print(f"‚ùå Failed to load cog {cog_file}: {e}")
    
    await bot.syncing()
    print("Bot is ready!")

def main():
    print(f"{bot.name} is starting up...")
    bot.run(TOKEN)

if __name__ == '__main__':
    main()

"""
File generated by BotBox - https://github.com/choice404/botbox
"""